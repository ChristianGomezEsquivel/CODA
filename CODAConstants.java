/* Generated By:JavaCC: Do not edit this line. CODAConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CODAConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INICIO = 5;
  /** RegularExpression Id. */
  int FIN = 6;
  /** RegularExpression Id. */
  int ENTERO = 7;
  /** RegularExpression Id. */
  int FLOAT = 8;
  /** RegularExpression Id. */
  int CADENA = 9;
  /** RegularExpression Id. */
  int INPUT = 10;
  /** RegularExpression Id. */
  int OUTPUT = 11;
  /** RegularExpression Id. */
  int CondIF = 12;
  /** RegularExpression Id. */
  int CondIF_ELSE = 13;
  /** RegularExpression Id. */
  int RWhile = 14;
  /** RegularExpression Id. */
  int RFor = 15;
  /** RegularExpression Id. */
  int SUMA = 16;
  /** RegularExpression Id. */
  int RESTA = 17;
  /** RegularExpression Id. */
  int DIVISION = 18;
  /** RegularExpression Id. */
  int MULTIPLICACION = 19;
  /** RegularExpression Id. */
  int RESIDUO = 20;
  /** RegularExpression Id. */
  int AND = 21;
  /** RegularExpression Id. */
  int OR = 22;
  /** RegularExpression Id. */
  int NOT = 23;
  /** RegularExpression Id. */
  int CompMAYOR = 24;
  /** RegularExpression Id. */
  int CompMENOR = 25;
  /** RegularExpression Id. */
  int CompMAY_IGUAL = 26;
  /** RegularExpression Id. */
  int CompMEN_IGUAL = 27;
  /** RegularExpression Id. */
  int CompIGUAL = 28;
  /** RegularExpression Id. */
  int CompDIFERENTE = 29;
  /** RegularExpression Id. */
  int ParentA = 30;
  /** RegularExpression Id. */
  int ParentC = 31;
  /** RegularExpression Id. */
  int CorchA = 32;
  /** RegularExpression Id. */
  int CorchC = 33;
  /** RegularExpression Id. */
  int LlaveA = 34;
  /** RegularExpression Id. */
  int LlaveC = 35;
  /** RegularExpression Id. */
  int ASIGNAR = 36;
  /** RegularExpression Id. */
  int AUMENTAR = 37;
  /** RegularExpression Id. */
  int DISMINUIR = 38;
  /** RegularExpression Id. */
  int PUNTO = 39;
  /** RegularExpression Id. */
  int DPUNTOS = 40;
  /** RegularExpression Id. */
  int ALFABETO = 41;
  /** RegularExpression Id. */
  int ID_VARIABLE = 42;
  /** RegularExpression Id. */
  int PALABRAS = 43;
  /** RegularExpression Id. */
  int NUM_ENTERO = 44;
  /** RegularExpression Id. */
  int NUM_FLOTANTE = 45;
  /** RegularExpression Id. */
  int CADENAS = 46;
  /** RegularExpression Id. */
  int ERRORES = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"inicio\"",
    "\"fin\"",
    "\"ent\"",
    "\"flot\"",
    "\"cad\"",
    "\"ingresar\"",
    "\"mostrar\"",
    "\"si\"",
    "\"sino\"",
    "\"mientras\"",
    "\"parar\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"$\"",
    "\"&&\"",
    "\"|\"",
    "\"!\"",
    "\"myq\"",
    "\"mnq\"",
    "\"myiq\"",
    "\"mniq\"",
    "\"igu\"",
    "\"dif\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\"aum\"",
    "\"dism\"",
    "\".\"",
    "\":\"",
    "<ALFABETO>",
    "<ID_VARIABLE>",
    "<PALABRAS>",
    "<NUM_ENTERO>",
    "<NUM_FLOTANTE>",
    "<CADENAS>",
    "<ERRORES>",
  };

}
